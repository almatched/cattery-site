---
import { storyblokEditable, useStoryblokApi } from "@storyblok/astro";
import { getTransLink } from "../utils/langs.ts";
import isPreview from "@/utils/isPreview.ts";
import { Image } from "astro:assets";
import type {
  AllProfilesStoryblok,
  PageStoryblok,
  ProfileStoryblok,
} from "component-types-sb";

interface Props {
  language: string;
  blok: AllProfilesStoryblok;
}

const { language, blok } = Astro.props;

const storyblokApi = useStoryblokApi();

const { data: profilesPageData } = await storyblokApi.get(
  "cdn/stories/profiles",
  {
    version: isPreview() ? "draft" : "published",
    language,
  }
);

const { data: itemsData } = await storyblokApi.get(`cdn/stories`, {
  version: isPreview() ? "draft" : "published",
  starts_with: "profiles/",
  is_startpage: false,
  language,
});

const profilesPage: PageStoryblok = profilesPageData.story.content;

const title = profilesPage.title;
const noContentFallback = profilesPage.content_absent;
const articles = itemsData.stories;
const maxWidth = "500";
---

<section {...storyblokEditable(blok)}>
  {!!title.trim().length && <h1 class="sr-only">{title}</h1>}
  {
    articles?.length === 0 ? (
      <p class="text-2xl">{noContentFallback}</p>
    ) : (
      <ul class="gap-5 grid grid-cols-1 min-[450px]:grid-cols-2 text-sm min-[450px]:text-base">
        {articles?.reverse().map((article) => {
          const profile: ProfileStoryblok = article.content;
          profile.slug = article.slug;
          return (
            <li class="relative hover:opacity-50 border border-accent rounded-md">
              <div class="aspect-[5/7] w-full rounded-t-md overflow-hidden mb-2">
                <Image
                  src={profile.image?.filename + `/m/${maxWidth}x${0}`}
                  alt={profile.image?.alt ?? "image without description"}
                  inferSize
                  class="object-cover object-center w-full h-full"
                  quality={80}
                />
              </div>
              <div class="mb-2 min-[450px]:mb-5 mx-2">
                <h2>
                  <a href={getTransLink(language, `/profiles/${profile.slug}`)}>
                    <span class="absolute inset-0 z-10" aria-hidden="true" />
                    {profile.title}
                  </a>
                </h2>
                {!!profile.gender?.trim().length && (
                  <div class="mb-2">
                    <p class="font-bold">{profile.gender_title}</p>
                    <p>{profile.gender}</p>
                  </div>
                )}
                {!!profile.birthdate?.trim().length && (
                  <div class="mb-2">
                    <p class="font-bold">{profile.birthdate_title}</p>
                    <p>{profile.birthdate.slice(0, 10)}</p>
                  </div>
                )}
                {!!profile.price?.trim().length && (
                  <div class="mb-2">
                    <p class="font-bold">{profile.price_title}</p>
                    <p>{profile.price}</p>
                  </div>
                )}
              </div>
            </li>
          );
        })}
      </ul>
    )
  }
</section>
